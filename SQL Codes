SQL CODES 


*Total Revenue*
SELECT sum(total_price) AS total_revenue
FROM pizza_sales;

-- 2. Average Order_Value
SELECT round(sum(total_price)/count(DISTINCT order_id))
FROM pizza_sales 

-- 3. Total Pizzas Sold
SELECT sum(quantity) AS total_pizzas_sold
FROM pizza_sales;

-- 4. Average Pizzas Per Order
SELECT sum(quantity) / count(orderid)
FROM pizza_sales;

-- 5. Daily Trend for Total Orders
SELECT to_char(order_date, 'day') AS weekday,  count(order_id)
FROM pizza_sales 
GROUP BY to_char(order_date, 'day')
ORDER BY weekday;


-- 6. Monthly Trend for Orders
SELECT EXTRACT (MONTH FROM order_date), count(order_id)
FROM pizza_sales 
GROUP BY EXTRACT (MONTH FROM order_date) ;



-- 7. Top 5 Pizzas by Total Orders
SELECT pizza_name, count(order_id) AS total_orders 
FROM  pizza_sales 
GROUP BY pizza_name
ORDER BY total_orders DESC
LIMIT 5;


-- 8. Bottom 5 Pizzas by Revenue
SELECT pizza_name, SUM(total_price) AS Total_Revenue
FROM pizza_sales
GROUP BY pizza_name
ORDER BY Total_Revenue ASC
LIMIT 5;

-- 9. Total Pizzas Sold by Pizza Category in February
SELECT pizza_category, SUM(quantity) AS Total_Quantity_Sold
FROM pizza_sales
WHERE MONTH(order_date) = 2
GROUP BY pizza_category
ORDER BY Total_Quantity_Sold DESC;


-- Hər kateqoriya üzrə ən çox gəlir gətirən pizza
SELECT pizza_category, pizza_name , total_revenue 
FROM (SELECT pizza_category, pizza_name, sum(total_price) AS total_revenue,
dense_rank() OVER (PARTITION BY pizza_category ORDER BY sum(total_price) DESC) AS dr  
FROM pizza_sales 
GROUP BY pizza_category, pizza_name )
WHERE dr=1

-- 2015-ci ilin ilk 7 günündə verilən sifarişlərin sayı və gəliri
SELECT  order_date, count(DISTINCT order_id), sum(total_price)
FROM pizza_sales 
WHERE order_date BETWEEN '2015-01-01' AND '2015-01-07' 
GROUP BY order_date 
ORDER BY order_date;

-- Ən çox satılan ölçü (size) hansıdır?
SELECT pizza_size, count(DISTINCT order_id)  AS count_id 
FROM pizza_sales 
GROUP BY pizza_size
ORDER BY count_id DESC 
LIMIT 1;

-- Ən çox gəlir gətirən 3 pizza kateqoriyası və onların ümumi gəlir payı (%)
WITH cte AS (
SELECT pizza_category, sum(total_price) AS total_revenue 
FROM pizza_sales 
GROUP BY pizza_category
)
SELECT pizza_category, total_revenue,
total_revenue*100/sum(total_revenue) OVER () AS umumifaiz 
FROM cte 
ORDER BY total_revenue DESC 
LIMIT 3;

-- Ümumi gəliri orta gəlirdən çox olan pizzalar
WITH cte AS (SELECT avg(total_price) AS ortalama 
FROM pizza_sales )
SELECT pizza_name, sum(total_price)  AS total_rev
FROM cte, pizza_sales 
GROUP BY pizza_name, ortalama
HAVING sum(total_price)>ortalama
ORDER BY total_rev DESC;

-- Günün saatlarına görə sifariş sayı (səhər, günorta, axşam, gecə)
SELECT 
CASE 
    WHEN EXTRACT (HOUR FROM order_time) ::INT BETWEEN 5 AND 11 THEN 'morning'
    WHEN EXTRACT (HOUR FROM order_time) :: INT BETWEEN 12 AND 17 THEN 'afternoon'
    WHEN EXTRACT (HOUR FROM order_time) :: INT BETWEEN 18 AND 22 THEN 'evening'
    ELSE 'night' 
    END saatlar , count(DISTINCT order_id)
FROM pizza_sales 
GROUP BY saatlar 



